name: Database Updater

on:
  schedule:
    - cron: '0 0 * * *'   # daily at 00:00 UTC
    - cron: '0 12 * * *'  # daily at 12:00 UTC
  workflow_dispatch:
  
env:
  XENIA_CANARY_REPO: xenia-canary/game-patches
  XENIA_NETPLAY_REPO: AdrianCassar/Xenia-WebServices

jobs:
  update-database:
    name: Update Database
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sparse-checkout: |
            Database/Patches/canary_patches.json
            Database/Patches/netplay_patches.json
            Database/Game Compatibility/stable.json
            Database/Game Compatibility/canary.json
            Database/version.json
          sparse-checkout-cone-mode: false


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch Xenia Manager versions
        id: fetch-versions
        run: |
          # Create version.json with error handling
          cat > fetch_versions.py << 'EOF'
          import json
          import urllib.request
          import urllib.error
          import sys
          
          def fetch_version(url, name):
              try:
                  req = urllib.request.Request(url, headers={'User-Agent': 'github-actions'})
                  with urllib.request.urlopen(req, timeout=10) as response:
                      data = json.loads(response.read())
                      return data.get('tag_name', 'unknown')
              except (urllib.error.URLError, json.JSONDecodeError, KeyError) as e:
                  print(f"Error fetching {name}: {e}", file=sys.stderr)
                  return 'unknown'
          
          urls = {
              'stable': 'https://api.github.com/repos/xenia-manager/xenia-manager/releases/latest',
              'experimental': 'https://api.github.com/repos/xenia-manager/experimental-builds/releases/latest'
          }
          
          data = {key: fetch_version(url, key) for key, url in urls.items()}
          
          with open('Database/version.json', 'w', encoding='utf-8') as f:
              json.dump(data, f, indent=2)
          
          print("Versions fetched successfully")
          EOF
          
          python fetch_versions.py

      - name: Update game compatibility database (Canary)
        run: python Scripts/game_compatibility.py --complete --debug
        env:
          TOKEN: ${{ secrets.COMPATIBILITY_TOKEN }}

      - name: Update game compatibility database (Stable)
        if: github.event_name == 'workflow_dispatch'
        run: python Scripts/game_compatibility.py --stable --complete --debug
        env:
          TOKEN: ${{ secrets.COMPATIBILITY_TOKEN }}

      - name: Ensure patch directory
        run: mkdir -p Database/Patches

      - name: Fetch game patches
        id: fetch-patches
        run: |
          # Function to fetch with retries
          fetch_with_retry() {
            local url=$1
            local output=$2
            local name=$3
            local max_attempts=3
            local attempt=1
            local temp_file="${output}.tmp"
            
            while [ $attempt -le $max_attempts ]; do
              echo "Fetching $name (attempt $attempt/$max_attempts)..."
              status=$(curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                -H "User-Agent: GitHub-Actions-Bot" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -o "$output" \
                -s -w "%{http_code}" \
                --max-time 30 \
                --retry 2 \
                --retry-delay 5 \
                "$url")
              
              if [ "$status" -eq 200 ]; then
                if jq empty "$temp_file" 2>/dev/null; then
                  jq '.' "$temp_file" > "$output"
                  rm "$temp_file"
                  echo "$name fetched successfully"
                  echo "${name}_success=true" >> $GITHUB_OUTPUT
                  return 0
                else
                  echo "Invalid JSON in $name response"
                fi
              else
                echo "HTTP $status for $name"
              fi
              
              attempt=$((attempt + 1))
              [ $attempt -le $max_attempts ] && sleep 10
            done
            
            echo "${name}_success=false" >> $GITHUB_OUTPUT
            return 1
          }

          mkdir -p Database/Patches
          
          # Fetch both patch sources
          fetch_with_retry \
            "https://api.github.com/repos/${{ env.XENIA_CANARY_REPO }}/contents/patches" \
            "Database/Patches/canary_patches.json" \
            "canary"
          
          fetch_with_retry \
            "https://api.github.com/repos/${{ env.XENIA_NETPLAY_REPO }}/contents/patches" \
            "Database/Patches/netplay_patches.json" \
            "netplay"

      - name: Check for changes and commit
        id: check-changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          
          # Check what files have changed
          git add Database/
          
          if git diff --cached --quiet; then
            echo "No changes detected in any database files"
            echo "changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "changes=true" >> $GITHUB_OUTPUT
          
          # Determine what changed
          changed_files=""
          updates=()
          
          if git diff --cached --name-only | grep -q "Database/version.json"; then
            changed_files="$changed_files Database/version.json"
            updates+=("Xenia Manager versions")
          fi
          
          if git diff --cached --name-only | grep -q "Database/game_compatibility.json"; then
            changed_files="$changed_files Database/game_compatibility.json"
            updates+=("Game compatibility database")
          fi
          
          if git diff --cached --name-only | grep -q "Database/Patches/"; then
            changed_files="$changed_files Database/Patches/"
            if [ "${{ steps.fetch-patches.outputs.canary_success }}" = "true" ] && [ "${{ steps.fetch-patches.outputs.netplay_success }}" = "true" ]; then
              updates+=("Xenia Canary & Netplay patches")
            elif [ "${{ steps.fetch-patches.outputs.canary_success }}" = "true" ]; then
              updates+=("Xenia Canary patches")
            elif [ "${{ steps.fetch-patches.outputs.netplay_success }}" = "true" ]; then
              updates+=("Xenia Netplay patches")
            fi
          fi
          
          # Create commit message
          timestamp=$(date -u '+%Y-%m-%d %H:%M:%S')
          if [ ${#updates[@]} -eq 1 ]; then
            commit_msg="Update ${updates[0]} - $timestamp UTC"
          else
            commit_msg="Update database - $timestamp UTC"
            for update in "${updates[@]}"; do
              commit_msg="$commit_msg"$'\n- '"$update"
            done
          fi
          
          echo "Committing changes:"
          git diff --stat --cached
          git commit -m "$commit_msg"
          git push
          
          echo "Successfully committed and pushed changes"
