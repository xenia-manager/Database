name: Fetch game compatibility

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  fetch_game_compatibility:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv

      - name: Run the Python script
        run: python Scripts/game_compatibility.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push changes to a new branch
        if: success() # Only run if previous steps succeeded
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Create a new branch
          BRANCH_NAME="update-game-compatibility-$(date +%Y%m%d)"
          git checkout -b $BRANCH_NAME

          # Add and commit changes
          git add Database/game_compatibility.json
          git diff-index --quiet HEAD || git commit -m "Update game compatibility"

          # Push the new branch
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          head: ${{ steps.commit_and_push.outputs.BRANCH_NAME }}  # Use the branch we just created
          base: main  # Target branch for the PR (adjust if needed)
          title: "Update game compatibility"
          body: "Automated update of game compatibility data."
          draft: true  # Set to true if you want to create a draft PR